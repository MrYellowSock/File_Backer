{"version":3,"sources":["API.js","DirPanel.js","FolderItem.js","Dirdialog.js","PathInput.js","Compiler.js","Picker.js","App.js","index.js"],"names":["ip","joinPath","base","name","endsWith","ranks","byteToStr","bytes","rank","Math","round","API","this","reqQueue","xhr","XMLHttpRequest","working","setInterval","work","req","shift","reqPath","data","callback","open","setRequestHeader","send","onload","responseText","dirPath","push","encodeURIComponent","Promise","resolve","reject","addReq","resp","Path","targList","outPath","JSON","stringify","splice","length","abort","DirPanel","goBack","refresh","style","float","onClick","FolderItem","item","validBasePath","useCheckBox","useSize","setPath","para","isDir","className","e","target","innerText","type","checked","isIgnored","width","textAlign","byte","contact","sorted","setSorted","getSize","then","Number","isNaN","sort","a","b","Dirdialog","dirList","useState","useEffect","list","reduce","prev","cur","getTotal","map","index","key","PathInput","useStorage","desc","onUpdate","showFile","browsePanel","targPath","s","localStorage","getItem","input","useRef","path","setBase","isBrowsing","setBrowse","isSort","setSort","setList","console","log","current","value","getFiles","parse","exists","files","borderColor","filter","v","setItem","stop","hidden","ref","onChange","substr","lastIndexOf","includes","Compiler","logLevl","setLevel","setLog","isCompiling","setComp","progress","setProg","max","disabled","p","streamCompileStatus","onprogress","onloadend","color","Picker","targChanged","updateTarg","App","listLen","arr","i","emptyArr","updateOut","changeList","toString","pop","val","targ","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88799c10.chunk.js","sourcesContent":["const port = 4000;\nconst ip = `http://localhost:${port}/`;\n\nfunction joinPath(base,name){\n    if(base.endsWith('/'))\n        return base+name;\n    else\n        return base+'/'+name;\n}\nconst ranks = ['B','KB','MB','GB'];\nfunction byteToStr(bytes){\n    if(typeof bytes !== 'number') return bytes;\n    var rank = 0;\n    while(bytes >= 1024){\n        bytes /= 1024;\n        rank += 1;\n    }\n    return `${Math.round(bytes*100)/100} ${ranks[rank]}`\n}\n\n//Asychronous Queue model\nclass APIMAN{\n    constructor(){\n        this.reqQueue = [];\n        this.xhr = new XMLHttpRequest();\n        this.working = false;\n        setInterval(()=>{\n            if(!this.working)\n                this.work()\n        },150);\n    }\n    work(){\n        var req = this.reqQueue.shift();\n        if(typeof req !== 'undefined'){\n            this.working = true;\n            var {reqPath,data,callback} = req;\n            this.xhr.open('POST',reqPath)\n            this.xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded')\n            this.xhr.send(data);\n            this.xhr.onload = ()=>{\n                callback(this.xhr.responseText);\n                this.work();\n            };\n        }\n        else\n            this.working = false;\n    }\n\n    addReq(reqPath,dirPath,callback){\n        this.reqQueue.push({reqPath:ip+reqPath,data:'path='+encodeURIComponent(dirPath),callback:callback});\n        //console.log(\"ADDED\");\n    }\n    getFiles(dirPath){\n        return new Promise((resolve,reject)=>{\n            this.addReq('getFiles',dirPath,(resp)=>{\n                return resolve(resp);\n            });\n        })\n    }\n    getSize(Path){\n        return new Promise((resolve,reject)=>{\n            this.addReq('getSize',Path,(resp)=>{\n                return resolve(resp);\n            });\n        })\n    }\n    streamCompileStatus(targList,outPath){\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"POST\",ip+'compile');\n        xhr.setRequestHeader('Content-Type','application/json')\n        xhr.send(JSON.stringify({targList:targList,outPath:outPath}));\n        return xhr;\n    }\n    stop(){\n        this.reqQueue.splice(0,this.reqQueue.length);\n        this.xhr.abort();\n        this.working = false;\n    }\n}\nconst API = new APIMAN();\n\nexport {joinPath,API,byteToStr};","import React from 'react'\n\nexport default function DirPanel({goBack,refresh}) {\n    return (\n        <div style={{float:\"right\"}}>\n            <button onClick={goBack}>⮝</button>\n            <button onClick={refresh}>🗘</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport {joinPath,byteToStr} from './API'\nimport './App.css'\n\nexport default function FolderItem({item,validBasePath,useCheckBox,useSize,setPath}) {\n    var para = null;\n    if(item.isDir)\n        para = (<p className=\"dir\" \n        onClick={(e)=>setPath(joinPath(validBasePath,e.target.innerText))}>\n        {useCheckBox?<input type=\"checkbox\" checked={!item.isIgnored} />:null}{item.name}\n        </p>);\n    else\n        para = (<p className=\"file\">\n        {useCheckBox?<input type=\"checkbox\" checked={!item.isIgnored}/>:null}{item.name}\n        </p>);\n    if(useSize)\n        return (<tr>\n            <td style={{width:\"100%\"}}>\n                {para}\n            </td>\n            <td style={{textAlign:\"right\"}}>\n                <p>{byteToStr(item.byte)}</p>\n            </td>\n        </tr>)\n    else\n        return para;\n}\n","import React, { useState ,useEffect} from 'react'\nimport FolderItem from './FolderItem';\nimport \"./App.css\"\nimport { API, joinPath,byteToStr } from './API';\n\nfunction contact(item,sorted,setSorted,validBasePath){\n    API.getSize(joinPath(validBasePath,item.name)).then((e)=>{\n        if(!Number.isNaN(+e)){\n            e = +e;\n            if(e === -1){\n                item.isIgnored = true;\n                e = 0;\n            }\n        }\n        item.byte = e;\n        sorted = sorted.sort((a,b)=>{\n            if(typeof a.byte === \"number\" && typeof a.byte === \"number\")\n                return b.byte - a.byte;\n            else\n                return 0;\n        })\n        setSorted([...sorted]);\n    })\n}\nfunction getTotal (list,useSize){\n    if(useSize)\n        return byteToStr(list.reduce((prev,cur)=>{\n            if(typeof cur.byte == 'number' && !cur.isIgnored)\n                return prev+cur.byte;\n            else\n                return prev;\n        },0)); \n    else\n        return \"\"\n}\n\nexport default function Dirdialog({dirList,validBasePath,useCheckBox,useSize,setPath}) {\n    //var [sorted,setSorted] = useState([]);    \n    var [sorted,setSorted] = useState(dirList);\n    useEffect(() => {\n        if(useSize){\n            for(var item of sorted){\n                if(typeof item.byte === 'undefined'){\n                    contact(item,sorted,setSorted,validBasePath);\n                }\n            }\n        }\n    }, [validBasePath,useSize])\n    useEffect(() => {\n        setSorted([...dirList]);\n    }, [dirList]);\n\n    return (\n        <>\n            <label style={{float:\"right\"}}>{getTotal(sorted,useSize)}</label>\n            <div className=\"dirdialog\">\n                {sorted.map((item,index)=>{\n                    return <FolderItem \n                        key={index} \n                        item={item} \n                        validBasePath={validBasePath} \n                        useCheckBox={useCheckBox}\n                        useSize={useSize} \n                        setPath={setPath}\n                    />\n                })}\n            </div>\n        </>\n    )\n}\n","import React,{useState,useRef,useEffect} from 'react'\nimport './App.css'\nimport {API} from './API'\nimport DirPanel from './DirPanel';\nimport Dirdialog from './Dirdialog';\n\nexport default function PathInput({useStorage,desc,onUpdate,showFile,useCheckBox,browsePanel,targPath}) {    \n    if(useStorage){\n        var s = localStorage.getItem(desc);\n        targPath = (s !== null)?s:targPath;\n    }\n    \n    var [input] = [useRef(),useRef()];\n    var [path,setPath] = useState(targPath);\n    var [validBasePath,setBase] = useState(\"\");\n    var [isBrowsing,setBrowse] = useState(!browsePanel);\n    var [isSort,setSort] = useState(false);\n    var [dirList,setList] = useState([]);\n\n    //note : without this path would remain the same useState default value is only set once.\n    useEffect(()=>{\n        setPath(targPath);\n    },[targPath])\n\n    function goBack(){\n        var prev = path;\n        if(prev.endsWith('/') && prev.length > 1){\n            prev = prev.substr(0,prev.length-1);\n        }\n        prev = prev.substr(0,prev.lastIndexOf(\"/\")+1);\n        //console.log(`${prev} ${targPath} ${path}`)\n        if(prev.includes(targPath) || useStorage){\n            setPath(prev)\n        }\n    }\n\n    function refresh(){\n        if(showFile && path === '') return;\n\n        console.log(`${desc} : ${path} , ${targPath}`)\n        input.current.value = path;\n        var res = API.getFiles(path);\n        res.then((e)=>{\n            try{\n                var {base,exists,files} = JSON.parse(e);\n                if(exists){\n                    input.current.style.borderColor = \"greenyellow\";\n                    setBase(base);\n                    if(typeof onUpdate == 'function')\n                        onUpdate(base);\n                    setList(files.filter((v)=>v.isDir || showFile ));\n                    if(useStorage)\n                        localStorage.setItem(desc,path);\n                }\n                else\n                    input.current.style.borderColor = \"red\";\n            }\n            catch{\n                console.log(e);\n            }\n            setSort(false);\n        })\n        return ()=>API.stop();//stop every thing folder navigation is top priority.\n    }\n    useEffect(refresh,[path]);\n\n    return (\n        <div>\n            <p hidden={!browsePanel}>{desc}:\n                <input style={{width:\"75%\"}} type=\"text\" ref={input} onChange={(e)=>setPath(e.target.value)}/>\n                <button onClick={()=>setBrowse(true)}>show</button>\n            </p>\n            <fieldset hidden={!isBrowsing}>\n                <DirPanel goBack={goBack} refresh={refresh}/>\n                <button hidden={!useCheckBox} onClick={()=>setSort(true)}>sort by size</button>\n                <Dirdialog \n                    dirList={dirList}\n                    validBasePath={validBasePath} \n                    useCheckBox={useCheckBox}\n                    useSize={isSort} \n                    setPath={setPath}/>\n\n                <div style={{float:\"right\"}} hidden={!browsePanel}>\n                    <button onClick={()=>setBrowse(false)}>close</button>\n                </div>\n            </fieldset>\n        </div>\n    )\n}\n","import React,{useState} from 'react'\nimport {API} from './API';\n\nexport default function Compiler({targList,outPath}) {\n    var [logLevl,setLevel] = useState(false);\n    var [log,setLog] = useState(\"\");\n    var [isCompiling,setComp] = useState(false);\n    var [progress,setProg] = useState(0);\n    return (\n        <>\n            <div style={{textAlign:\"center\"}}>\n                <progress value={progress} max=\"100\"/>\n                <button style={{float:\"right\"}} disabled={isCompiling} onClick={()=>{\n                    if(!isCompiling){\n                        if(targList.filter((p)=>p.length===0).length > 0)\n                        {\n                            setLevel(true);\n                            setLog(\"Bad Path!\");\n                            return;\n                        }\n                        setComp(true);\n                        setLevel(false);\n                        setLog(`compile target:${targList}  ,  output:${outPath}`);\n                        console.log(targList);\n                        var xhr = API.streamCompileStatus(targList,outPath);\n                        xhr.onprogress = ()=>{\n                            setProg(xhr.responseText.length);\n                        }\n                        xhr.onloadend = ()=>{\n                            setComp(false);\n                            setProg(0);\n                        }\n                        \n                    }\n                    else{\n                        setLevel(true);\n                        setLog(\"dont press me!\");\n                    }\n                }}>{(isCompiling)?\"COMPILING\":\"COMPILE\"}</button>\n            </div>\n\n            <div className=\"log\" style={{color:((logLevl)?\"red\":\"white\")}}>\n                {log}\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport PathInput from './PathInput';\n\nfunction Picker({index,targChanged}) {\n  var [targPath,updateTarg] = useState(\"\");\n\n  return (\n    <fieldset>\n      <PathInput useStorage={true} \n                 showFile={true} \n                 useCheckBox={true} \n                 browsePanel={true} \n                 desc={\"Target Folder\"+index} \n                 targPath={targPath}\n                 onUpdate={(e)=>{\n                    updateTarg(e);\n                    targChanged(e);\n                 }}/>\n    </fieldset>\n    \n  );\n}\n\nexport default Picker;\n","import React, { useState } from 'react';\nimport PathInput from './PathInput';\nimport Compiler from './Compiler';\nimport Picker from './Picker';\n\nfunction emptyArr (){\n  var listLen = localStorage.getItem(\"listLen\");\n  if(listLen !== null && !Number.isNaN(+listLen))\n    listLen = +listLen;\n  else{\n    listLen = 1;\n  }\n\n  var arr = [];\n  for(var i=0;i<listLen;i++)\n    arr.push(\"\");\n  return arr;\n}\nfunction App() {\n\n  var [targList,setList] = useState(emptyArr());\n  var [outPath,updateOut] = useState(\"\");\n\n  function changeList(){\n    localStorage.setItem(\"listLen\",targList.length.toString());\n    setList([...targList])\n  }\n  return (\n    <>\n      <button onClick={()=>{\n        targList.push(\"\");\n        changeList();\n      }}>+</button>\n      <button onClick={()=>{\n        targList.pop();\n        changeList();\n      }}>-</button>\n      {targList.map((val,i)=>{\n        return <Picker index={i} targChanged={(targ)=>{\n          targList[i] = targ;\n          setList([...targList]);\n        }}/>\n      })}\n      <PathInput useStorage={true} \n                 showFile={false} \n                 useCheckBox={false} \n                 browsePanel={true} \n                 desc=\"Output Folder\" \n                 targPath=\"\"\n                 onUpdate={updateOut}/>\n      <Compiler targList={targList} outPath={outPath}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}